<?php

/**
 * PluginSidSectionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PluginSidSectionTable extends myDoctrineTable {

    /**
     * Returns an instance of this class.
     *
     * @return object PluginSidSectionTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('PluginSidSection');
    }

/**
 *
 * @param <type> $title
 * @param <type> $idRubrique
 * @return SidSection 
 */
    public function getSectionByTitleAndRubriqueId($title, $idRubrique) {
        $a = $this->createQuery('c')
                        ->withI18n(sfContext::getInstance()->getUser()->getCulture(), null, 'c')
                        ->where('cTranslation.title = ? and c.is_active = ? and c.rubrique_id = ?', array($title, true, $idRubrique));

        if ($a->execute()->count() == 0) {
            return new SidSection();
        } else {
            return $a->fetchOne();
        }
    }
    
    public function findOneByTitleAndIsActiveAndRubriqueId($title, $rubriqueId) {
        $a = $this->createQuery('s')
                ->withI18n(sfContext::getInstance()->getUser()->getCulture(), null, 's')
                ->where('sTranslation.title = ? and s.is_active = ? and s.rubrique_id = ?', array($title, true, $rubriqueId));

        if ($a->execute()->count() < 1) {
            $section = new SidSection();
            return $section;
        } else {
            return $a->fetchOne();
        }
    }
    
    public function findOneByTitleAndRubriqueId($title, $rubriqueId) {
        $a = $this->createQuery('s')
                ->withI18n(sfContext::getInstance()->getUser()->getCulture(), null, 's')
                ->where('sTranslation.title = ? and s.rubrique_id = ?', array($title, $rubriqueId));

        if ($a->execute()->count() < 1) {
            $section = new SidSection();
            return $section;
        } else {
            return $a->fetchOne();
        }
    }
    
    public function order_by_title() {

        $a = $this->createQuery('s')
                ->withI18n(sfContext::getInstance()->getUser()->getCulture(), null, 's')
                ->orderBy('sTranslation.title');
        return $a->execute();
        

//        return  $sectionPage[0]->name. ' - ' . $rubriquePage[0]->name;
//        return  $sectionPage[0]->name;
    }

}