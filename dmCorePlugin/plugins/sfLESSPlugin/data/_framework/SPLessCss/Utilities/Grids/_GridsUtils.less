// _GridsUtils.less
// v1.5
// Last Updated : 2012-04-26 16:10
// Copyright : SID Presse
// Author : Arnaud GAUDIN

//Calcul de la largeur du contenu
//On utilise les paramètres par défault
@gridSiteWidth(@resolution: @gridScreen; @nbreCols: @gridCol; @innerPadding: 0;) {
	//largeur de site
	@totalWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	//application des paramètres
	width: @totalWidth;
	padding-left: @innerPadding;
	padding-right: @innerPadding;
}

//Calcul de la largeur du contenu et de son padding (utilisé principale pour un @gridContainer: body)
//On utilise les paramètres par défault
@gridSiteWidthAutoPad(@resolution: @gridScreen; @nbreCols: @gridCol; @scrollbarWidth: 32px) {
	//largeur de site
	@totalWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	//gouttière global de centrage
	@innerPadding: (@resolution - @scrollbarWidth - @totalWidth) / 2;
	//application des paramètres
	width: @totalWidth;
	padding-left: @innerPadding;
	padding-right: @innerPadding;
}

//permet de calculer la largeur en fonction du nombre de colonnes choisi
@gridWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	width: @elementWidth;
}
@gridMinWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMinWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	min-width: @elementMinWidth;
}
@gridMaxWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMaxWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	max-width: @elementMaxWidth;
}

//permet de trouver la largeur inférieure la plus proche du nombre rentré
@gridFloorWidth(@inputWidth: 100px) {
	//calcul des paramètres
	@nbreFloorCol: floor(@inputWidth / (@gridColWidth + @gridGutter));
	@elementWidth: @gridColWidth * @nbreFloorCol + @gridGutter * (@nbreFloorCol -1);
	//application des paramètres
	width: @elementWidth;
}

//permet de calculer la largeur en fonction du nombre de lignes choisi
@gridHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	height: @elementHeight;
}
@gridMinHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMinHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	min-height: @elementMinHeight;
}
@gridMaxHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMaxHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	max-height: @elementMaxHeight;
}

//permet de trouver la hauteur inférieur la plus proche du nombre rentré
@gridFloorHeight(@inputHeight: 100px) {
	//calcul des paramètres
	@nbreFloorBaseLine: floor(@inputHeight / @gridBaseline);
	@elementHeight: @nbreFloorBaseLine * @gridBaseline;
	//application des paramètres
	height: @elementHeight;
}

//permet de calculer le margin en fonction du nombre de colonnes choisi
@gridMarginLeft(@nbreCols: 1) {
	//calcul des paramètres
	@elementMarginLeft: @gridColWidth * @nbreCols + @gridGutter * @nbreCols;
	//application des paramètres
	margin-left: @elementMarginLeft;
}

//permet de calculer le margin en fonction du nombre de colonnes choisi
@gridMarginRight(@nbreCols: 1) {
	//calcul des paramètres
	@elementMarginRight: @gridColWidth * @nbreCols + @gridGutter * @nbreCols;
	//application des paramètres
	margin-right: @elementMarginRight;
}

//permet de calculer un décalage absolu à gauche en fonction du nombre de colonnes choisi
@gridAbsoluteLeft(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementAbsoluteLeft: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	left: @elementAbsoluteLeft;
}

//permet de calculer un décalage absolu à droite en fonction du nombre de colonnes choisi
@gridAbsoluteRight(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementAbsoluteRight: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	right: @elementAbsoluteRight;
}

//permet de calculer un margin négatif à gauche égale à la moitiée de la largeur obtenue par gridWidth
@gridMarginNegativeCentering(@nbreCols: 1; @nbreLine: 1; @padHSub: 0; @padVSub: 0) {
	//calcul des paramètres
	@elementWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padHSub;
	@elementHeight: @gridBaseline * @nbreLine - @padVSub;
	//application des paramètres
	margin-left: @elementWidth/-2;
	margin-top: @elementHeight/-2;
}

//replacement des images de la base editoriale
@gridFormatAdjustVertical(@imageRatio; @nbreCols: 1; @nbreLine: 1; @padHSub: 0; @padVSub: 0; @offsetTop: 0; @offsetBottom: 0) {
	gridFormatAdjustVertical: 'gridFormatAdjustVertical';
	// elementWidth: @elementWidth;
	// elementHeight: @elementHeight;
	// imageRatio_P: @imageRatio_P;
	// imageFormatWidth_P: @imageFormatWidth_P;
	// imageFormatHeight_P: @imageFormatHeight_P;
	// propHeight: @propHeight;
	// offsetHeight: @offsetHeight;

	@gridFormatAdjustVerticalWidth(@nbreCols; @padHSub);
	@gridFormatAdjustVerticalMargin(@imageRatio; @nbreCols; @nbreLine; @padHSub; @padVSub; @offsetTop; @offsetBottom);
}

//Système de replacement des images de la Base Editoriale, gestion de la largeur
@gridFormatAdjustVerticalWidth(@nbreCols: 1; @padHSub: 0) {
	//calcul des paramètres
	@elementWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padHSub;
	//application des paramètres
	width: @elementWidth;
}

//Système de replacement des images de la Base Editoriale, gestion du margin
@gridFormatAdjustVerticalMargin(@imageRatio; @nbreCols: 1; @nbreLine: 1; @padHSub: 0; @padVSub: 0; @offsetTop: 0; @offsetBottom: 0) {
	//calcul des paramètres
	@elementWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padHSub;
	@elementHeight: @gridBaseline * @nbreLine - @padVSub;
	//calcul de la hauteur appliquée pour un redimensionnement homothétique
	@propHeight: round(@elementWidth * @imageRatio);
	//calcul de la différence de hauter
	@offsetHeight: (@elementHeight - @propHeight);

	//application des paramètres
	margin-top: @offsetHeight/2 + @offsetTop;
	margin-bottom: @offsetHeight/2 + @offsetBottom;
}