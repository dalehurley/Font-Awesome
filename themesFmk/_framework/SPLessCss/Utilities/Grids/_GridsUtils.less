// _GridsUtils.less
// v1.2
// Last Updated : 2011-10-04 16:30
// Copyright : SID Presse
// Author : Arnaud GAUDIN

//Fonctions de débug (permet de spécifier de manière débrayables des attributs de débug)
@gridDebugBgc(@debugColor: Lime) {
	//background-color: @debugColor;
}
@gridDebugBrc(@debugColor: Red) {
	//border-color: @debugColor;
}

//Calcul de la largeur du contenu
//On utilise les paramètres par défault
@gridSiteWidth(@resolution: @gridScreen; @nbreCols: @gridCol; @innerPadding: 0;) {
	//largeur de site
	@totalWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	//application des paramètres
	width: @totalWidth;
	padding-left: @innerPadding;
	padding-right: @innerPadding;
}

//Calcul de la largeur du contenu et de son padding (utilisé principale pour un @gridContainer: body)
//On utilise les paramètres par défault
@gridSiteWidthAutoPad(@resolution: @gridScreen; @nbreCols: @gridCol; @scrollbarWidth: 32px) {
	//largeur de site
	@totalWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	//gouttière global de centrage
	@innerPadding: (@resolution - @scrollbarWidth - @totalWidth) / 2;
	//application des paramètres
	width: @totalWidth;
	padding-left: @innerPadding;
	padding-right: @innerPadding;
}

//permet de calculer la largeur en fonction du nombre de colonnes choisi
@gridWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	width: @elementWidth;
}
@gridMinWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMinWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	min-width: @elementMinWidth;
}
@gridMaxWidth(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMaxWidth: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	max-width: @elementMaxWidth;
}

//permet de trouver la largeur inférieure la plus proche du nombre rentré
@gridFloorWidth(@inputWidth: 100px) {
	//calcul des paramètres
	@nbreFloorCol: floor(@inputWidth / (@gridColWidth + @gridGutter));
	@elementWidth: @gridColWidth * @nbreFloorCol + @gridGutter * (@nbreFloorCol -1);
	//application des paramètres
	width: @elementWidth;
}

//permet de calculer la largeur en fonction du nombre de lignes choisi
@gridHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	height: @elementHeight;
}
@gridMinHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMinHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	min-height: @elementMinHeight;
}
@gridMaxHeight(@nbreLine: 1; @padSub: 0) {
	//calcul des paramètres
	@elementMaxHeight: @gridBaseline * @nbreLine - @padSub;
	//application des paramètres
	max-height: @elementMaxHeight;
}

//permet de trouver la hauteur inférieur la plus proche du nombre rentré
@gridFloorHeight(@inputHeight: 100px) {
	//calcul des paramètres
	@nbreFloorBaseLine: floor(@inputHeight / @gridBaseline);
	@elementHeight: @nbreFloorBaseLine * @gridBaseline;
	//application des paramètres
	height: @elementHeight;
}

//permet de calculer le margin en fonction du nombre de colonnes choisi
@gridMarginLeft(@nbreCols: 1) {
	//calcul des paramètres
	@elementMarginLeft: @gridColWidth * @nbreCols + @gridGutter * @nbreCols;
	//application des paramètres
	margin-left: @elementMarginLeft;
}

//permet de calculer le margin en fonction du nombre de colonnes choisi
@gridMarginRight(@nbreCols: 1) {
	//calcul des paramètres
	@elementMarginRight: @gridColWidth * @nbreCols + @gridGutter * @nbreCols;
	//application des paramètres
	margin-right: @elementMarginRight;
}

//permet de calculer un décalage absolu à gauche en fonction du nombre de colonnes choisi
@gridAbsoluteLeft(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementAbsoluteLeft: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	left: @elementAbsoluteLeft;
}

//permet de calculer un décalage absolu à droite en fonction du nombre de colonnes choisi
@gridAbsoluteRight(@nbreCols: 1; @padSub: 0) {
	//calcul des paramètres
	@elementAbsoluteRight: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1) - @padSub;
	//application des paramètres
	right: @elementAbsoluteRight;
}


//CONFIGURATION GÉNÉRALE DU LAYOUT
@gridAutoLayout(@resolution: @gridScreen; @nbreCols: @gridCol; @nbreCols_SidebarLeft: @gridCol_SidebarLeft; @nbreCols_SidebarRight: @gridCol_SidebarRight) {
	//recalcul des valeurs nécessaires à la mise en page du site
	@getGridWidth_Site: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	@getGridWidth_SidebarLeft: @gridColWidth * @nbreCols_SidebarLeft + @gridGutter * (@nbreCols_SidebarLeft -1);
	@getGridWidth_SidebarRight: @gridColWidth * @nbreCols_SidebarRight + @gridGutter * (@nbreCols_SidebarRight -1);
	@getGridPadding: (@resolution - @getGridWidth_Site) / 2;
	
	//CONFIGURATION ZONE DE CONTENU EN FONCTION DE LA PRÉSENCE DES SIDEBARS
	.dm_page_content,
	.no-sidebar .dm_page_content {
		float: left;
		width: @getGridWidth_Site;
		margin-left: 0;
		margin-right: @getGridWidth_Site * -1;
	}

	.sidebar-left .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarLeft - @gridGutter;
		margin-left: @getGridWidth_SidebarLeft + @gridGutter;
		margin-right: @getGridWidth_Site * -1;
	}

	.sidebar-right .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter;
		margin-left: 0;
		margin-right: (@getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter) * -1;
	}

	.two-sidebars .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarLeft - @getGridWidth_SidebarRight - @gridGutter * 2;
		margin-left: @getGridWidth_SidebarLeft + @gridGutter;
		margin-right: (@getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter) * -1;
	}
	
	//PLACEMENT SIDEBARS
	.dm_layout_left {
		width: @getGridWidth_SidebarLeft;
		margin-left: 0;
		margin-right: @getGridWidth_SidebarLeft * -1;
	}
	
	.dm_layout_right {
		width: @getGridWidth_SidebarRight;
		margin-left: @getGridWidth_Site - @getGridWidth_SidebarRight;
		margin-right: @getGridWidth_Site * -1;
	}
}

@gridAutoLayoutHideSidebarLeft(@resolution: @gridScreen; @nbreCols: @gridCol; @nbreCols_SidebarLeft: @gridCol_SidebarLeft; @nbreCols_SidebarRight: @gridCol_SidebarRight) {
	//recalcul des valeurs nécessaires à la mise en page du site
	@getGridWidth_Site: @gridColWidth * @nbreCols + @gridGutter * (@nbreCols -1);
	@getGridWidth_SidebarLeft: @gridColWidth * @nbreCols_SidebarLeft + @gridGutter * (@nbreCols_SidebarLeft -1);
	@getGridWidth_SidebarRight: @gridColWidth * @nbreCols_SidebarRight + @gridGutter * (@nbreCols_SidebarRight -1);
	@getGridPadding: (@resolution - @getGridWidth_Site) / 2;
	
	//CONFIGURATION ZONE DE CONTENU EN FONCTION DE LA PRÉSENCE DES SIDEBARS
	.dm_page_content,
	.no-sidebar .dm_page_content {
		float: left;
		width: @getGridWidth_Site;
		margin-left: 0;
		margin-right: @getGridWidth_Site * -1;
	}

	.sidebar-left .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarLeft - @gridGutter;
		margin-left: @getGridWidth_SidebarLeft + @gridGutter;
		margin-right: @getGridWidth_Site * -1;
	}

	.sidebar-right .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter;
		margin-left: 0;
		margin-right: (@getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter) * -1;
	}

	.two-sidebars .dm_page_content {
		width: @getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter;
		margin-left: 0;
		margin-right: (@getGridWidth_Site - @getGridWidth_SidebarRight - @gridGutter) * -1;
	}
	
	//PLACEMENT SIDEBARS
	.dm_layout_left {
		//temporaire en attendant mieux
		display: none;
		visibility: hidden;
		/*
		//@gridWidth(1;0);
		//margin-left: 0;
		width: @gridGutter;
		margin-left: (@gridGutter + @gridPadding) * -1;
		margin-right: @getGridWidth_SidebarLeft * -1;
		.dm_zones { visibility: hidden; }
		
		
		&:hover, &.touch {
			padding-left: (@gridGutter + @gridPadding);
			width: @getGridWidth_SidebarLeft;
			.dm_zones { visibility: visible; }
		}
		*/
	}
	
	.dm_layout_right {
		width: @getGridWidth_SidebarRight;
		margin-left: @getGridWidth_Site - @getGridWidth_SidebarRight;
		margin-right: @getGridWidth_Site * -1;
	}
}